variant: fcos
version: 1.6.0
systemd:
  units:
    - name: nextcloud-cron.timer
      enabled: true
      contents: |
        [Unit]
        Description=Timer for Nextcloud Cron Runner

        [Timer]
        OnCalendar=*:0/5

        [Install]
        WantedBy=timers.target

storage:
  files:
    - path: /etc/containers/systemd/nextcloud.pod
      contents:
        inline: |
          [Unit]
          Description=Nextcloud Pod

          [Pod]
          PodName=nextcloud
          Network=nextcloud.network

    - path: /etc/containers/systemd/nextcloud.network
      contents:
        inline: |
          [Unit]
          Description=Nextcloud

    - path: /etc/containers/systemd/nextcloud-cron.container
      contents:
        inline: |
          [Unit]
          Description=Nextcloud Cron Runner
          Wants=network-online.target postgres-nextcloud.service
          After=network-online.target postgres-nextcloud.service var-lib-data.mount

          [Container]
          ContainerName=nextcloud-cron
          Image=mirror.gcr.io/nextcloud:production-fpm-alpine
          User=33
          Exec=/usr/local/bin/php /var/www/html/cron.php --verbose
          Pod=nextcloud.pod
          Volume=/var/lib/data/nextcloud/data:/var/www/html:z,rw
          AutoUpdate=registry

    - path: /etc/containers/systemd/nextcloud.container
      contents:
        inline: |
          [Unit]
          Description=Nextcloud
          Wants=network-online.target postgres-nextcloud.service
          After=network-online.target postgres-nextcloud.service var-lib-data.mount valkey-nextcloud.service

          [Service]
          Restart=always

          [Container]
          ContainerName=nextcloud
          Image=mirror.gcr.io/nextcloud:production-apache
          Pod=nextcloud.pod
          HealthCmd=curl -sSf 'http://localhost/status.php' | grep '"installed":true' | grep '"maintenance":false' | grep '"needsDbUpgrade":false' || exit 1
          Environment=POSTGRES_HOST=postgres-nextcloud
          Environment=POSTGRES_USER=nextcloud
          Environment=POSTGRES_DB=nextcloud
          Environment=POSTGRES_PASSWORD=
          Environment=NC_setup_create_db_user=false
          Environment=NEXTCLOUD_ADMIN_USER_FILE=/secrets/admin_user
          Environment=NEXTCLOUD_ADMIN_PASSWORD_FILE=/secrets/admin_password
          Environment=NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.sludge.network
          Environment=OBJECTSTORE_S3_BUCKET=sludge-nextcloud
          Environment=OBJECTSTORE_S3_HOST=nbg1.your-objectstorage.com
          Environment=OBJECTSTORE_S3_REGION=eu-central
          Environment=OBJECTSTORE_S3_KEY_FILE=/secrets/object_store_key
          Environment=OBJECTSTORE_S3_SECRET_FILE=/secrets/object_store_secret
          Environment=OVERWRITEPROTOCOL=https
          Environment=REDIS_HOST=valkey-nextcloud
          Volume=/var/lib/data/nextcloud/secrets:/secrets:z,ro
          Volume=/var/lib/data/nextcloud/data:/var/www/html:z,rw
          Label=traefik.enable="true"
          Label=traefik.http.routers.anubis-nextcloud.rule=Host'(`nextcloud.sludge.network`)'
          Label=traefik.http.middlewares.anubis-nextcloud-https-redirect.redirectscheme.scheme="https"
          Label=traefik.http.routers.anubis-nextcloud.middlewares="anubis-nextcloud-https-redirect"
          Label=traefik.http.routers.anubis-nextcloud-secure.entrypoints="https"
          Label=traefik.http.routers.anubis-nextcloud-secure.rule=Host'(`nextcloud.sludge.network`)'
          Label=traefik.http.routers.anubis-nextcloud-secure.tls="true"
          Label=traefik.http.routers.anubis-nextcloud-secure.tls.certresolver=lets-encrypt
          Label=traefik.http.services.anubis-nextcloud.loadbalancer.server.port="80"
          AutoUpdate=registry

          [Install]
          WantedBy=multi-user.target

    - path: /etc/containers/systemd/postgres-nextcloud.volume
      contents:
        inline: |
          [Volume]
          Device=/var/lib/data/nextcloud/database
          Driver=local
          Options=bind
          Type=none

    - path: /etc/containers/systemd/postgres-nextcloud.container
      contents:
        inline: |
          [Unit]
          Description=Postgres Nextcloud
          Wants=network-online.target postgres-nextcloud.volume
          After=network-online.target postgres-nextcloud.volume

          [Service]
          Restart=always

          [Container]
          ContainerName=postgres-nextcloud
          Image=mirror.gcr.io/postgres:17
          Pod=nextcloud.pod
          HealthCmd=pg_isready -d nextcloud
          Environment=POSTGRES_DB=nextcloud
          Environment=POSTGRES_USER=nextcloud
          Environment=POSTGRES_HOST_AUTH_METHOD=trust
          Environment=PGDATA=/var/lib/postgresql/data/pgdata
          Volume=postgres-nextcloud.volume:/var/lib/postgresql/data:z,rw
          AutoUpdate=registry

          [Install]
          WantedBy=multi-user.target

    - path: /etc/containers/systemd/valkey-nextcloud.container
      contents:
        inline: |
          [Unit]
          Description=Valkey Nextcloud
          Wants=network-online.target
          After=network-online.target

          [Service]
          Restart=always

          [Container]
          ContainerName=valkey-nextcloud
          Image=mirror.gcr.io/valkey/valkey
          Pod=nextcloud.pod
          HealthCmd=redis-cli --raw ping
          AutoUpdate=registry

          [Install]
          WantedBy=multi-user.target
